Module Two Summary
- In this module, a number of simple Java programs were created and the Eclipse editor was used to write the code. 
- Open and close comment tags (/* and **/) were used to insert comments in the code. 
- Curly braces (brackets) are inserted beneath the public class name - the Java code is written within the curly braces. 
- When Java code is written in Eclipse, suggestions automatically appear, helping the user to write the code. 
- Keywords used in the code, such as: public, static and void were briefly explained in relation to the function of
programs. For example 'static' means that the main function does not relate to an object; 'void' means that the function
returns no value. 
- The code: System.out.print is used to instruct the program to print or display the output. 
- Defining variables in Java programs was demonstrated. Variables store data that programs can manipulate. 
Different variable types have different capacities for size, layout and the range of values that can be stored in memory. 
- The concept of strings was discussed. Strings are a sequence of characters. They are considered as objects in Java. 
String classes are used to create and manipulate strings. String objects are created by using a keyword and a constructor.
String classes contain around 13 constructors that determine the value of the string. 

- Properties and variables for the string are written between curly braces. Values such as number, text, name and greeting
are written as strings and as print out commands. It is important to use quotation marks with strings, so they are
recognised by Java. 

Any syntax errors highlighted in Eclipse need to be corrected before the program will run. 
- Using a 'while loop' in Java was demonstrated. A while loop statement in Java, is something that repeatedly executes a target statement, as long as a given condition is true. A set of instructions is provided to the program and it executes code, until a given condition is met. 
- A basic 'for loop' program was demonstrated in Java. For Loop is a repetition control structure, that allows you to efficiently write a loop that needs to be performed a specific number of times. 
- 'For Loop' is useful when you know how many times a task is to be repeated. It contains three broad elements. Initialization allows you to declare and initialize any loop control variable. Boolean expression is where the expression is evaluated. For example if it is true, the body of the loop is executed, if it is false the body of the loop will not be executed and the control jumps to the next statement. After the body of the 'For Loop' is executed, the control jumps back to the update statement. This statement allows you to update any loop control variables. Increment or decrement values can be used and Java can be told to run the loop in ascending or in descending order. 
- An 'if statement' was demonstrated in Java. An 'if statement' can be followed by an optional 'else statement'. For example, if it's raining outside you can take an umbrella, or else you can stay at home. 

- Enabling user input in Java, was demonstrated. Users can be asked to input data, which is then processed before output is given. A common example would be entering a username and password. 
- 'Do...While' functionality was demonstrated in a simple Java program. The difference between a 'while loop' and a 'do while loop', is the latter is guaranteed to perform at least one time. The syntax for Do is written before the syntax for While. 
- A 'switch statement' was demonstrated in Java. A switch statement can have a number of possible execution paths, in addition to if, else and then. In addition, a switch works with byte, short, char and int data types. A switch statement allows a variable to be tested for equality against a list of values. Each value is called a case, when building a switch statement. The variable being switched, is checked on for each case. For example, if the months of the year are being used, cases can be made for each month, which can then be tested. 
- The student was advised to practice using the code that was demonstrated in the lessons. 
